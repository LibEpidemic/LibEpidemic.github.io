{"version":3,"sources":["webpack:///./src/views/started/QuickStart.vue?2763","webpack:///./src/views/started/QuickStart.vue?4444","webpack:///src/views/started/QuickStart.vue","webpack:///./src/views/started/QuickStart.vue?54e4","webpack:///./src/views/started/QuickStart.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","_v","staticStyle","staticRenderFns","attrs","component"],"mappings":"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","file":"js/chunk-9f8ad548.2d48ade9.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuickStart.vue?vue&type=style&index=0&id=df7e72c2&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_vm._m(0),_c('div',{staticClass:\"content\"},[_c('div',[_c('p',{staticClass:\"title\"},[_vm._v(\"Init\")]),_c('a-divider',{staticStyle:{\"margin\":\"10px 0\",\"background-image\":\"linear-gradient(to right,  rgb(103, 179, 241),  rgb(103, 179, 241), #f6f6f6, #f6f6f6)\"}}),_c('p',[_vm._v(\"To use LibEpidemic to build a model, first initialize a directory under examples/ by using following commands:\")]),_vm._m(1),_c('p',[_vm._v(\"Then you can create a new python file to write the code:\")]),_vm._m(2),_c('p',[_vm._v(\"If you only need to experience the most basic functions, such as building a basic SEIR model to familiarize yourself with the usage of LibEpidemic, you can also simply create a single file with the following command:\")]),_vm._m(3),_c('p',[_vm._v(\"However, doing so will clutter the file structure and interfere with your subsequent use. Therefore, we do not recommend this.\")]),_c('br'),_c('p',{staticClass:\"title\"},[_vm._v(\"Import env\")]),_c('a-divider',{staticStyle:{\"margin\":\"10px 0\",\"background-image\":\"linear-gradient(to right,  rgb(103, 179, 241),  rgb(103, 179, 241), #f6f6f6, #f6f6f6)\"}}),_c('p',[_vm._v(\"First make sure you have successfully installed the environment dependencies in requirements, then enter the following command in test.py:\")]),_vm._m(4),_c('p',[_vm._v(\"To make sure the environment is ok, you can type:\")]),_vm._m(5),_c('p',[_vm._v(\"Then you will see following response:\")]),_vm._m(6),_c('p',[_vm._v(\"This means that your environment is configured correctly and you can start building infectious disease models using APIs!\")]),_c('p',[_vm._v(\"The above code can be seen at examples/test-copy/hello.py.\")]),_c('br'),_c('p',{staticClass:\"title\"},[_vm._v(\"Create Structure\")]),_c('a-divider',{staticStyle:{\"margin\":\"10px 0\",\"background-image\":\"linear-gradient(to right,  rgb(103, 179, 241),  rgb(103, 179, 241), #f6f6f6, #f6f6f6)\"}}),_c('p',[_vm._v(\"Here you will quickly build a SEIR model using the API provided by LibEpidemic:\")]),_vm._m(7),_vm._m(8),_c('p',[_vm._v(\"The above code can be seen at examples/test-copy/struct.py.\")]),_c('br'),_c('p',{staticClass:\"title\"},[_vm._v(\"Formula and Parameters\")]),_c('a-divider',{staticStyle:{\"margin\":\"10px 0\",\"background-image\":\"linear-gradient(to right,  rgb(103, 179, 241),  rgb(103, 179, 241), #f6f6f6, #f6f6f6)\"}}),_c('p',[_vm._v(\"Here you need to assign a formula to each edge in the struct to implement the dynamics in the infectious disease model:\")]),_vm._m(9),_c('p',[_vm._v(\"This code formally transforms the previously established SEIR model structure into a complete SEIR model, including kinetic mechanisms and parameters.\")]),_c('p',[_vm._v(\"Lines 5, 8, and 10 in the above code define the dynamic equations between the compartments in the form of expressions. LibEpidemic’s engine and compilation system support arbitrary expressions consisting of multiplication and addition. This can cover the vast majority of scenarios in infectious disease models.\")]),_c('p',[_vm._v(\"Lines 1-4 set the specific value of the parameter, and lines 6, 7, 9, and 11 fill in these four parameters into the expression.\")]),_c('p',[_vm._v(\"The above code can be seen at examples/test-copy/param.py.\")]),_c('br'),_c('p',{staticClass:\"title\"},[_vm._v(\"Execute\")]),_c('a-divider',{staticStyle:{\"margin\":\"10px 0\",\"background-image\":\"linear-gradient(to right,  rgb(103, 179, 241),  rgb(103, 179, 241), #f6f6f6, #f6f6f6)\"}}),_c('p',[_vm._v(\"A complete SEIR has been built, and you can finally use LibEpidemic's engine to execute the model and finish your work!\")]),_vm._m(10),_c('p',[_vm._v(\"If things go well, you’ll get the following results from standard output:\")]),_vm._m(11),_c('p',[_vm._v(\"This concludes LibEpidemic’s Quick Start, you can find the complete code above at examples/test-copy/exec.py. You can further experience LibEpidemic by changing the parameter values inside!\")]),_c('br')],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"header\"},[_c('div',{staticStyle:{\"padding-top\":\"20px\",\"color\":\"white\"}},[_c('p',{staticStyle:{\"margin\":\"20px 0 30px 130px\",\"font-size\":\"60px\"}},[_vm._v(\"Quick Start\")]),_c('p',{staticStyle:{\"margin\":\"0px 0 20px 130px\",\"font-size\":\"30px\"}},[_vm._v(\" This page will help you quickly know the basic usages of LibEpidemic. \")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code\"},[_c('code',{attrs:{\"data-lang\":\"bash\"}},[_vm._v(\" cd Epidemic-Modeling-survey cd examples mkdir LibEpidemicTest \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code\"},[_c('code',{attrs:{\"data-lang\":\"bash\"}},[_vm._v(\" touch test.py \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code\"},[_c('code',{attrs:{\"data-lang\":\"bash\"}},[_vm._v(\" cd Epidemic-Modeling-survey cd examples touch test.py \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code\"},[_c('code',{attrs:{\"data-lang\":\"python\"}},[_vm._v(\" from compartment.Graph import Graph from compartment.Model import Model from executor.Executor import Executor from compartment.Descriptor import vertical_divide from compartment.Transfer import init_compartment, set_path_exp, set_path_parameters from visual.visual_graph import visual_model from visual.visual_model_data import visual_compartment_values \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code\"},[_c('code',{attrs:{\"data-lang\":\"python\"}},[_vm._v(\" print('Welcome to LibEpidemic!') \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code\"},[_c('code',{attrs:{\"data-lang\":\"bash\"}},[_vm._v(\" D:\\\\softwares\\\\python\\\\python.exe D:/ncov/Epidemic-Modeling-survey/examples/test-copy/hello.py Welcome to LibEpidemic! Process finished with exit code 0 \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code\"},[_c('code',{attrs:{\"data-lang\":\"python\"}},[_vm._v(\" graph = Graph('basic_SEIR', 'S') vertical_divide(graph, 'S', ['E', 'I', 'R']) model = Model('basic_SEIR', graph) visual_model(model) \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"The first line initializes a graph containing the S compartment and names it basic_SEIR.\")]),_c('li',[_vm._v(\"The second line uses vertical_divide to subdivide the initial S into S, E, I and R, which corresponds to the SEIR model.\")]),_c('li',[_vm._v(\"The third line converts the diagram used to describe the abstract structure into a model in LibEpidemic after determining the structure of the compartment model, providing support for subsequent work.\")]),_c('li',[_vm._v(\"The last line calls the visualization API and prints the structure diagram that builds this model.\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code\"},[_c('code',{attrs:{\"data-lang\":\"python\"}},[_vm._v(\" beta = 0.5 epsilon = 0.1 gamma = 0.1 population = 10000 set_path_exp(model, 'S', 'E', 'beta*S*I*popu') set_path_parameters(model, 'S', 'E', 'beta', beta) set_path_parameters(model, 'S', 'E', 'popu', 1.0 / population) set_path_exp(model, 'E', 'I', 'epsilon*E') set_path_parameters(model, 'E', 'I', 'epsilon', epsilon) set_path_exp(model, 'I', 'R', 'gamma*I') set_path_parameters(model, 'I', 'R', 'gamma', gamma) \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code\"},[_c('code',{attrs:{\"data-lang\":\"python\"}},[_vm._v(\" init_value = {'S': 9995, 'E': 2, 'I': 3, 'R': 0} init_compartment(model, init_value) executor = Executor(model) for index in range(5): executor.simulate_step(index) print('_______________________________________') print('day {}'.format(index + 1)) visual_compartment_values(model) \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code\"},[_c('code',{attrs:{\"data-lang\":\"bash\"}},[_vm._v(\" D:\\\\softwares\\\\python\\\\python.exe D:/ncov/Epidemic-Modeling-survey/examples/test-copy/exec.py _______________________________________ day 1 S : 9993.50075 E : 3.29925 I : 2.9000000000000004 R : 0.30000000000000004 _______________________________________ day 2 S : 9992.05169239125 E : 4.41838260875 I : 2.9399250000000006 R : 0.5900000000000001 _______________________________________ day 3 S : 9990.58289826266 E : 5.445338476462667 I : 3.0877707608750007 R : 0.8839925000000002 _______________________________________ day 4 S : 9989.040466774793 E : 6.443236116684064 I : 3.3235275324337676 R : 1.1927695760875003 _______________________________________ day 5 S : 9987.380524224098 E : 7.4588550557117115 I : 3.6354983908587974 R : 1.525122329330877 Process finished with exit code 0 \")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"container\">\n    <div class=\"header\">\n      <div style=\"padding-top: 20px;color: white;\">\n        <p style=\"margin: 20px 0 30px 130px; font-size: 60px\">Quick Start</p>\n        <p style=\"margin: 0px 0 20px 130px; font-size: 30px\">\n          This page will help you quickly know the basic usages of LibEpidemic.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"content\">\n      <div>\n            \n            <p class=\"title\">Init</p>\n            <a-divider style=\"margin: 10px 0; background-image: linear-gradient(to right,  rgb(103, 179, 241),  rgb(103, 179, 241), #f6f6f6, #f6f6f6);\"></a-divider>\n            <!-- <p>Download the source files from GitHub:</p> -->\n            <p>To use LibEpidemic to build a model, first initialize a directory under examples/ by using following commands:</p>\n            <div class=\"code\">\n                <code data-lang=\"bash\">\n                    cd Epidemic-Modeling-survey\n                    cd examples\n                    mkdir LibEpidemicTest\n                </code>\n            </div>\n            <p>Then you can create a new python file to write the code:</p>\n            <div class=\"code\">\n                <code data-lang=\"bash\">\n                    touch test.py\n                </code>\n            </div>\n            <p>If you only need to experience the most basic functions, such as building a basic SEIR model to familiarize yourself with the usage of LibEpidemic, you can also simply create a single file with the following command:</p>\n            <div class=\"code\">\n                <code data-lang=\"bash\">\n                    cd Epidemic-Modeling-survey\n                    cd examples\n                    touch test.py\n                </code>\n            </div>\n            <p>However, doing so will clutter the file structure and interfere with your subsequent use. Therefore, we do not recommend this.</p>\n            <br>\n\n            <p class=\"title\">Import env</p>\n            <a-divider style=\"margin: 10px 0; background-image: linear-gradient(to right,  rgb(103, 179, 241),  rgb(103, 179, 241), #f6f6f6, #f6f6f6);\"></a-divider>\n            <p>First make sure you have successfully installed the environment dependencies in requirements, then enter the following command in test.py:</p>\n            <div class=\"code\">\n                <code data-lang=\"python\">\n                  from compartment.Graph import Graph\n                  from compartment.Model import Model\n                  from executor.Executor import Executor\n                  from compartment.Descriptor import vertical_divide\n                  from compartment.Transfer import init_compartment, set_path_exp, set_path_parameters\n                  from visual.visual_graph import visual_model\n                  from visual.visual_model_data import visual_compartment_values\n                </code>\n            </div>\n            <p>To make sure the environment is ok, you can type:</p>\n            <div class=\"code\">\n                <code data-lang=\"python\">\n                  print('Welcome to LibEpidemic!')\n                </code>\n            </div>\n            <p>Then you will see following response:</p>\n            <div class=\"code\">\n                <code data-lang=\"bash\">\n                  D:\\softwares\\python\\python.exe D:/ncov/Epidemic-Modeling-survey/examples/test-copy/hello.py\n                  Welcome to LibEpidemic!\n\n                  Process finished with exit code 0\n                </code>\n            </div>\n            <p>This means that your environment is configured correctly and you can start building infectious disease models using APIs!</p>\n            <p>The above code can be seen at examples/test-copy/hello.py.</p>\n            <br>\n\n            <p class=\"title\">Create Structure</p>\n            <a-divider style=\"margin: 10px 0; background-image: linear-gradient(to right,  rgb(103, 179, 241),  rgb(103, 179, 241), #f6f6f6, #f6f6f6);\"></a-divider>\n            <p>Here you will quickly build a SEIR model using the API provided by LibEpidemic:</p>\n            <div class=\"code\">\n                <code data-lang=\"python\">\n                  graph = Graph('basic_SEIR', 'S')\n                  vertical_divide(graph, 'S', ['E', 'I', 'R'])\n                  model = Model('basic_SEIR', graph)\n                  visual_model(model)\n                </code>\n            </div>\n            <ul>\n              <li>The first line initializes a graph containing the S compartment and names it basic_SEIR.</li>\n              <li>The second line uses vertical_divide to subdivide the initial S into S, E, I and R, which corresponds to the SEIR model.</li>\n              <li>The third line converts the diagram used to describe the abstract structure into a model in LibEpidemic after determining the structure of the compartment model, providing support for subsequent work.</li>\n              <li>The last line calls the visualization API and prints the structure diagram that builds this model.</li>\n            </ul>\n            <p>The above code can be seen at examples/test-copy/struct.py.</p>\n            <br>\n\n            <p class=\"title\">Formula and Parameters</p>\n            <a-divider style=\"margin: 10px 0; background-image: linear-gradient(to right,  rgb(103, 179, 241),  rgb(103, 179, 241), #f6f6f6, #f6f6f6);\"></a-divider>\n            <p>Here you need to assign a formula to each edge in the struct to implement the dynamics in the infectious disease model:</p>\n            <div class=\"code\">\n                <code data-lang=\"python\">\n                  beta = 0.5\n                  epsilon = 0.1\n                  gamma = 0.1\n                  population = 10000\n                  set_path_exp(model, 'S', 'E', 'beta*S*I*popu')\n                  set_path_parameters(model, 'S', 'E', 'beta', beta)\n                  set_path_parameters(model, 'S', 'E', 'popu', 1.0 / population)\n                  set_path_exp(model, 'E', 'I', 'epsilon*E')\n                  set_path_parameters(model, 'E', 'I', 'epsilon', epsilon)\n                  set_path_exp(model, 'I', 'R', 'gamma*I')\n                  set_path_parameters(model, 'I', 'R', 'gamma', gamma)\n                </code>\n            </div>\n            <p>This code formally transforms the previously established SEIR model structure into a complete SEIR model, including kinetic mechanisms and parameters.</p>\n            <p>Lines 5, 8, and 10 in the above code define the dynamic equations between the compartments in the form of expressions. LibEpidemic’s engine and compilation system support arbitrary expressions consisting of multiplication and addition. This can cover the vast majority of scenarios in infectious disease models.</p>\n            <p>Lines 1-4 set the specific value of the parameter, and lines 6, 7, 9, and 11 fill in these four parameters into the expression.</p>\n            <p>The above code can be seen at examples/test-copy/param.py.</p>\n            <br>\n\n            <p class=\"title\">Execute</p>\n            <a-divider style=\"margin: 10px 0; background-image: linear-gradient(to right,  rgb(103, 179, 241),  rgb(103, 179, 241), #f6f6f6, #f6f6f6);\"></a-divider>\n            <p>A complete SEIR has been built, and you can finally use LibEpidemic's engine to execute the model and finish your work!</p>\n            <div class=\"code\">\n                <code data-lang=\"python\">\n                  init_value = {'S': 9995, 'E': 2, 'I': 3, 'R': 0}\n                  init_compartment(model, init_value)\n                  executor = Executor(model)\n                  for index in range(5):\n                      executor.simulate_step(index)\n                      print('_______________________________________')\n                      print('day {}'.format(index + 1))\n                      visual_compartment_values(model)\n                </code>\n            </div>\n            <p>If things go well, you’ll get the following results from standard output:</p>\n            <div class=\"code\">\n                <code data-lang=\"bash\">\n                  D:\\softwares\\python\\python.exe D:/ncov/Epidemic-Modeling-survey/examples/test-copy/exec.py\n                  _______________________________________\n                  day 1\n                  S : 9993.50075\n                  E : 3.29925\n                  I : 2.9000000000000004\n                  R : 0.30000000000000004\n                  _______________________________________\n                  day 2\n                  S : 9992.05169239125\n                  E : 4.41838260875\n                  I : 2.9399250000000006\n                  R : 0.5900000000000001\n                  _______________________________________\n                  day 3\n                  S : 9990.58289826266\n                  E : 5.445338476462667\n                  I : 3.0877707608750007\n                  R : 0.8839925000000002\n                  _______________________________________\n                  day 4\n                  S : 9989.040466774793\n                  E : 6.443236116684064\n                  I : 3.3235275324337676\n                  R : 1.1927695760875003\n                  _______________________________________\n                  day 5\n                  S : 9987.380524224098\n                  E : 7.4588550557117115\n                  I : 3.6354983908587974\n                  R : 1.525122329330877\n\n                  Process finished with exit code 0\n                </code>\n            </div>\n            <p>This concludes LibEpidemic’s Quick Start, you can find the complete code above at examples/test-copy/exec.py. You can further experience LibEpidemic by changing the parameter values inside!</p>\n            <br>\n        </div>\n     \n    </div>\n    \n  </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n            };\n        },\n        components: {\n        }\n    };\n</script>\n\n<style scoped>\n.container {\n  margin: auto;\n  width: 100%;\n  height: auto;\n  /* border: red solid 1px; */\n}\n.header {\n  width: 100%;\n  min-height: 250px;\n  background:  rgb(27, 140, 233) linear-gradient(to right,  rgb(27, 140, 233), rgb(11, 247, 188));\n  /* border: blue solid 1px; */\n}\n.content {\n    width: 80%;\n    height: auto;\n    margin: 50px auto 0 auto;\n    font-size: 20px;\n    line-height: 36px;\n    color: black;\n    font-family: 'Open Sans', 'Microsoft YaHei', Arial, Helvetica, sans-serif;\n    /* border: blue solid 3px; */\n}\n.title {\n    font-size: 32px;\n    font-weight: 700;\n    font-family: 'Open Sans', 'Microsoft YaHei', Arial, Helvetica, sans-serif;\n    margin-bottom: 0;\n}\n\n.code {\n    color: #f8f8f2;\n    background-color: #272822;\n    tab-size: 4;\n    overflow: auto;\n    width: 100%;\n    padding: 10px 20px;\n    margin: 0px 0px 16px 0px;\n    text-align: left;\n    border: 1px solid #e5e5e5;\n    border-radius: 10px;\n    line-height: 1.5;\n}\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuickStart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuickStart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./QuickStart.vue?vue&type=template&id=df7e72c2&scoped=true&\"\nimport script from \"./QuickStart.vue?vue&type=script&lang=js&\"\nexport * from \"./QuickStart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./QuickStart.vue?vue&type=style&index=0&id=df7e72c2&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"df7e72c2\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}